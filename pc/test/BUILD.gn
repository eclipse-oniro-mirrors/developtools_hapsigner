import("../signature_tools.gni")
import("../services/utils/signature_tools_utils.gni")
import("../services/zip/signature_tools_zip.gni")
import("../services/cmd/signature_tools_cmd.gni")
import("../services/codesigning/signature_tools_codesigning.gni")
import("../services/common/signature_tools_common.gni")
import("../services/hap/signature_tools_hap.gni")
import("../services/profile/signature_tools_profile.gni")

import("//build/ohos.gni")

config("service_include") {
  visibility = ["*"]

  include_dirs = [
    "//third_party/openssl/include",
    "//third_party/openssl/crypto/pkcs12",
    "${signature_tools_service_api}/include",
    "${signature_tools_service_signer}/include",
  ]

  include_dirs += signature_tools_utils_include
  include_dirs += signature_tools_zip_include
  include_dirs += signature_tools_codesigning_include
  include_dirs += signature_tools_common_include
  include_dirs += signature_tools_hap_include
  include_dirs += signature_tools_profile_include
  include_dirs += signature_tools_cmd_include

  
  defines = [
    "HI_LOG_ENABLE",
    "SIGNATURE_LOG_TAG=\"Signature_Tools\"",
    "LOG_DOMAIN=0xD004100",
  ]

  cflags = [
    "--coverage",
  ]

  cflags_cc = [
    "-std=c++17",
    "--coverage",
  ]

  ldflags = [
    "-fPIC",
    "-Wl,-E",
    "--coverage",
  ]
}

ohos_source_set("service_target") {
  
  sources_obj = [
    "${signature_tools_service_api}/src/sign_tool_service_impl.cpp",
    "${signature_tools_service_api}/src/localization_adapter.cpp",
    "${signature_tools_service_api}/src/cert_tools.cpp",
    "${signature_tools_service_signer}/src/signer_factory.cpp",
    "${signature_tools_service_signer}/src/local_signer.cpp",
    "${signature_tools_service_signer}/src/signer.cpp",
  ]

  sources_obj += signature_tools_utils_src
  sources_obj += signature_tools_zip_src
  sources_obj += signature_tools_codesigning_src
  sources_obj += signature_tools_common_src
  sources_obj += signature_tools_hap_src
  sources_obj += signature_tools_profile_src
  sources_obj += signature_tools_cmd_src

  sources = sources_obj

  configs = [ ":service_include" ]

  remove_configs = [ "//build/config/compiler:no_exceptions" ]
  
  public_deps = [
    "//third_party/jsoncpp:jsoncpp",
    "//third_party/zlib:shared_libz",
    "//third_party/bzip2:libbz2",
    "//third_party/openssl:libcrypto_shared",
    "//third_party/openssl:libssl_shared"
  ]

  public_external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  # cflags = [
  #   "--coverage",
  # ]

  # cflags_cc = [
  #   "-std=c++17",
  #   "--coverage",
  # ]

  # ldflags = [
  #   "-fPIC",
  #   "-Wl,-E",
  #   "--coverage",
  # ]

}